---
name: "build"
"on":
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  build:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        machine:
          - host: jupiter
            platform: x86_64-linux
          - host: luna
            platform: x86_64-linux
          - host: attic
            platform: x86_64-linux

    steps:
      # https://github.com/actions/runner-images/issues/2840
      - name: Free up a bit of space on the runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Connect to Tailscale network
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Create a netrc file to connect to attic
        run: |
          sudo mkdir -p /etc/nix
          echo -e "machine ${{ secrets.ATTIC_HOST }}\npassword ${{ secrets.ATTIC_TOKEN }}" | sudo tee /etc/nix/netrc > /dev/null

      - name: Install nix
        uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: |
            substituters = ${{ secrets.ATTIC_HOST }}/system?priority=39 https://cache.nixos.org?priority=40
            trusted-public-keys = system:GBYio4lxWDHAX11RDHFd3CGOWy3FJ+F5bmIRwtv2Qdg= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

      - name: Install magic-nix-cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build the system for each host and push the result to the cache
        run: |
          nix build .#nixosConfigurations.${{ matrix.machine.host }}.config.system.build.toplevel
          nix run github:zhaofengli/attic#default login nix-cache ${{ secrets.ATTIC_HOST }} ${{ secrets.ATTIC_TOKEN }}
          nix run github:zhaofengli/attic#default push system result
